<!DOCTYPE html>
<html lang="en-US">
<head>
              <meta charset="UTF-8">
	<meta name="viewport" content="width=device-width">
	<link rel="profile" href="http://gmpg.org/xfn/11">
	<link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.5/css/bootstrap.min.css">
<title>Migrate from Visio Web Access to Visio Online &#8211; Visio Insights</title>
<link rel='dns-prefetch' href='//ajax.aspnetcdn.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel='stylesheet' id='wds-ratings-css'  href='https://blogs.msdn.microsoft.com/wp-content/plugins/wds-ratings/wds-ratings.css?ver=20161014' type='text/css' media='all' />
<link rel='stylesheet' id='microsoft-parent-style-css'  href='https://blogs.msdn.microsoft.com/wp-content/themes/microsoft/style.css?ver=02092017' type='text/css' media='all' />
<link rel='stylesheet' id='microsoft-child-style-css'  href='https://blogs.msdn.microsoft.com/wp-content/themes/microsoft-msdn/style.css?ver=04152016' type='text/css' media='all' />
	<div id='msccBanner' dir='ltr' data-site-name='uhf-TechNetBlogs' data-mscc-version='0.4.0' data-nver='aspnet-2.0.7' data-sver='0.1.2' class='cc-banner' role='alert'>
<link rel=""shortcut icon"" href=""https://i1.social.s-msft.com/Forums/GlobalResources/images/Technet/favicon.ico"">

<link rel="canonical" href="https://blogs.msdn.microsoft.com/visio/2017/09/25/migrate-from-visio-web-access-to-visio-online/" />
<!-- og:title -->
<meta property="og:title" content="Migrate from Visio Web Access to Visio Online" />
<!-- og:description -->
<meta property="og:description" content="Overview Visio Online replaces Visio Web Access (also called Visio Services) in SharePoint Online. Visio Online is the new way to view, create and share Visio diagrams in SharePoint Online. As part of the Office Online ecosystem, Visio Online includes a modern UI, introduces performance improvements and has richer capabilities that aren’t available in Visio..." />
</head>
<body class="post-template-default single single-post postid-2285 single-format-standard">
<div id="page" class="site container-fluid">
	<header id="site-header" class="site-header row" role="banner">
		<div id="site-header-global-wrapper" class="site-header-global-wrapper">
			<div id="site-header-global" class="site-header-global">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#site-profile-menu" aria-label="toggle menu" tabindex="0" aria-expanded="false">
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				<div id="site-logo" class="col-sm-5 row navbar-header">
					<div id="header-microsoft-logo">
						<a id="home-link" href="https://www.microsoft.com/" tabindex="1" aria-label="Microsoft logo">
							<img id="header-microsoft-logo-svg" src="https://blogs.msdn.microsoft.com/visio/wp-content/themes/microsoft/images/ms-logo-gray.svg" alt="Microsoft logo">
							<span id="brand">
								<span id="brand-separator">|</span>
								<span id="brand-name"></span>
							</span>
						</a>
					</div>
				</div>
				<div id="site-header-global-right" class="col-sm-7">
				</div>
			</div>

		</div>
		<div id="site-header-blog-wrapper" class="site-header-blog-wrapper ms-blog-header clear-both">
			<div id="site-header-blog" class="site-header-blog">
				<nav class="navbar navbar-inverse">
					<div id="blog-logo-area" class="navbar-header">
						<div id="blog-logo" data-toggle="collapse" data-target="#blog-menu" tabindex="0" aria-label="blog logo">
														<div id="blog-logo-text">
<h1 class="site-title ms-blog-title">
					<a href="https://blogs.msdn.microsoft.com/visio" class="for-desktop">
						Visio Insights					</a>
					<a href="https://blogs.msdn.microsoft.com/visio" class="for-mobile">
						Visio Insights					</a>
				</h1>
<!-- blog description -->
<p class="site-description ms-blog-description">The official blog of the Microsoft Visio product team</p>
			</div>
									</div>
					</div>
									</nav>
			</div>
			
		</div>
		<div id="site-content" class="site-content row">

	<div id="primary" class="content-area col-sm-9">
	<main id="site-main" class="site-main" role="main">
		<div id="single-content" class="div-content">
<!-- Post start -->
<article id="post-2285" class="post-2285 post type-post status-publish format-standard hentry category-uncategorized tag-apis tag-extensibility tag-programming tag-visio tag-visio-online">
	<header class="entry-header">
<h1 class="entry-title">Migrate from Visio Web Access to Visio Online</h1>
<div class="entry-meta">
<span class="byline"><span class="author vcard"><a class="url fn n profile-usercard-hover" data-profile-userid="eb78383b108c4193a0a593011dd29f8e" href="https://social.msdn.microsoft.com/profile/Visio+Team">Visio Team</a></span>
</span><span class="posted-on posted-on-margin">
			<span class="screen-reader-text"></span>
<time class="entry-date published updated" datetime="2017-09-25T11:13:39+00:00">September 25, 2017</time>
			</span>
		</div>
		<hr>
	</header><!-- .entry-header -->
<div class="entry-content single">
		<h2 style="color: darkblue">Overview</h2>
<p>Visio Online replaces Visio Web Access (also called Visio Services) in SharePoint Online. Visio Online is the new way to view, create and share Visio diagrams in SharePoint Online. As part of the Office Online ecosystem, Visio Online includes a modern UI, introduces performance improvements and has richer capabilities that aren’t available in Visio Web Access. The below sections describe how you can migrate from Visio Web Access to Visio Online using different examples.</p>
<h2 style="color: darkblue">Visio Web Access Scanner</h2>
<p>Before you start migration, we recommend that you use the Visio Web Access scanner to find all pages that have Visio Web Access embedded in them. The tool is available <a href="https://github.com/SharePoint/PnP-Tools/tree/master/Solutions/SharePoint.Visio.Scanner">here</a> with detailed instructions to get started quickly.</p>
<h2 style="color: darkblue">Decide on a migration path</h2>
<p>This flowchart helps you plan how to migrate and choose which sections are most relevant to your particular situation.<br />
<a href="https://msdnshared.blob.core.windows.net/media/2017/09/Migration-Flow2.png"><img width="480" height="512" class="size-large wp-image-2355 aligncenter" alt="Migration flow from Visio Web Access to Visio Online" src="Migration-Flow2-971x1024.png" /></a></p>
<p>&nbsp;</p>
<h2 style="color: darkblue">Migrate VDW files to work with Visio Online</h2>
<p>Visio Online supports VSD, VSDX and VSDM file extensions for viewing Visio files in SharePoint Online. For your VDW files to continue to work, open them in Visio Desktop and save them as VSD or VSDX files to view them with Visio Online. If you want to edit VDW files on the web, we recommend you save them as VSDX.</p>
<h2 style="color: darkblue">Embed Visio drawing in a modern SharePoint page</h2>
<h4>Add a File Viewer web part to a modern SharePoint page</h4>
<p>Create a modern SharePoint page where you wish to embed the Visio diagram. For more information, see <a target="_blank" href="https://support.office.com/en-us/article/Add-a-page-to-a-site-b3d46deb-27a6-4b1e-87b8-df851e503dec" rel="noopener">Add a page to a site</a>.</p>
<p>1. Click on the + sign, and then choose File Viewer.</p>
<p><a href="fileviewer.png"><img width="138" height="78" class="size-full wp-image-2356 aligncenter" alt="Copy the embed url from Embed dialog" src="fileviewer.png" /></a></p>
<p>2. Browse to a Visio file that you wish to embed, and then choose Open.</p>
<p>For more information, see <a target="_blank" href="https://support.office.com/en-us/article/Using-web-parts-on-SharePoint-Online-pages-336e8e92-3e2d-4298-ae01-d404bbe751e0" rel="noopener">Using web parts on SharePoint Online pages</a>.</p>
<h4>Use the Embed command in Visio Online editor</h4>
<p>1. Open the Visio diagram, select Open Diagram, and then select Edit in Browser.<br />
2. Select File &gt; Share &gt; Embed.<br />
3. In the Embed dialog box, copy the Embed code.<br />
4. On a modern SharePoint page, add the Embed Code Web Part, and then add the embed code to it.</p>
<p>For more information, see <a href="https://support.office.com/en-us/article/Use-the-Embed-web-part-on-a-modern-page-721f3b2f-437f-45ef-ac4e-df29dba74de8">Use the Embed web part on a modern page</a>.</p>
<p>&nbsp;</p>
<h2 style="color: darkblue">Embed a Visio drawing in a classic SharePoint page with key properties</h2>
<p>This section covers scenarios where you want to embed the Visio drawing and set some key properties by default.</p>
<p>1. Open the document library where the Visio drawing is stored and click it to open in Visio Online. From there, open the Embed dialog and copy the Embed URL of the drawing.</p>
<p><a href="https://msdnshared.blob.core.windows.net/media/2017/09/Visio-embed-url.png"><img width="427" height="304" class="alignleft wp-image-3125" alt="" src="Visio-embed-url-1024x730.png" /></a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;<br />
&nbsp;<br />
&nbsp;</p>
<p>&nbsp;<br />
&nbsp;<br />
&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h6><i>If you are using Visio Online in Edit mode, open the Embed dialog by clicking on File &gt; Share &gt; Embed. If you are using Visio Online in View mode, open the Embed dialog by clicking on '...' and then 'Embed'.</i></h6>
<p>2. Create a classic SharePoint page where you wish to embed the Visio drawing. (Select Pages &gt; New &gt; Web Part Page. Enter a name, choose Site Pages under Document Library, and then click Create.)<br />
3. Add a script editor web part to it and choose the code snippet from below cases, that suits your need.<br />
4. In the code snippets, update the URL variable to the one you have copied in step #1 above.</p>
<h4>Width and Height of embedded Visio drawing</h4>
<p>Change the width and height parameters in the following code sample to decide the size of the embedded Visio drawing.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

// Create an iframe to host the VisioOnline document
document.write("&lt;div id='iframeHost' /&gt;");

    // Hooking up with a SharePoint event, so that document is embedded when page is loaded.
    ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);
    
    let session; // Global variable to store the session and pass it afterwards in Visio.run()

    //Function which embeds the Visio file in respective frame, created earlier.
    function initEmbeddedFrame() 
    {
        // TODO_URL
        // Update the following url, with the desire Visio file url.
        <span style="color: blue">var url</span> = "https://contoso.sharepoint.com...";

        url = url.replace("action=view","action=embedview");
        url = url.replace("action=default","action=embedview");
        url = url.replace("action=edit","action=embedview");
        url = url.replace("action=interactivepreview","action=embedview");

        session = new OfficeExtension.EmbeddedSession(
            url, 
            { 
                id: "embed-iframe", 
                container: document.getElementById("iframeHost"),
                <span style="color: blue">width:</span>"100%",
                <span style="color: blue">height:</span>"800px"
            });

        return session.init().then(function ()
        {
                window.console.log("Session successfully initialized");
        });
     }
&lt;/script&gt;
</pre>
</div>
<p>&nbsp;</p>
<h4>Page Name</h4>
<p>Change the URL and page name in the following code sample to embed a drawing and select the page to open by default. This is useful if your drawing has multiple pages and you want to open to a particular page by default.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

// Create an iframe to host the VisioOnline document
document.write("&lt;div id='iframeHost' /&gt;");

    // Hooking up with a SharePoint event, so that document is embedded when page is loaded.
    ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);

    let session; // Global variable to store the session and pass it afterwards in Visio.run()

    //Function which embeds the Visio file in respective frame, created earlier.
    function initEmbeddedFrame() 
    {
        // TODO_URL
        // Update the following url, with the desire Visio file url.
        <span style="color: blue">var url</span> = "https://contoso.sharepoint.com...";

        url = url.replace("action=view","action=embedview");
        url = url.replace("action=default","action=embedview");
        url = url.replace("action=edit","action=embedview");
        url = url.replace("action=interactivepreview","action=embedview");

        session = new OfficeExtension.EmbeddedSession(
            url, 
            { 
                id: "embed-iframe", 
                container: document.getElementById("iframeHost") 
            });

        return session.init().then(function ()
        {
            // Binding with DocumentLoadComplete event
            // If the currently Loaded page is different, change it
            Visio.run(session, function(context)
            {
                 context.document.onDocumentLoadComplete.add(switchPage);
                 return context.sync();
	    });
	});
     }
	
     function switchPage() 
     {
           Visio.run(session, function (context) 
           { 
               // TODO_PAGE
               // Ensure the Visio file has multiple pages, and the default page has the following name
               <span style="color: blue">var pageName</span> = "Page-1";
               var document = context.document;
               document.setActivePage(pageName);
                    return context.sync();
                }).catch(function(error)
                {
                    window.console.log("Error: " + error);
                    if (error instanceof OfficeExtension.Error) 
                    {
                        window.console.log("Debug info: " + JSON.stringify(error.debugInfo));
                    }
                });
    }
&lt;/script&gt;
</pre>
</div>
<p>&nbsp;</p>
<h4>Toolbars</h4>
<p>Change the URL in the following code sample to embed a drawing and hide various toolbars such as navigation bar, status bar, and so on by default.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

// Create an iframe to host the VisioOnline document
document.write("&lt;div id='iframeHost' /&gt;");

// Hooking up with a SharePoint event, so that document is embedded when page is loaded.
ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);

let session; // Global variable to store the session and pass it afterwards in Visio.run()

//Function which embeds the Visio file in respective frame, created earlier.
function initEmbeddedFrame() 
{
    // TODO_URL
    // Update the following url, with the desire Visio file url.
    <span style="color: blue">var url</span> = "https://contoso.sharepoint.com...";

    url = url.replace("action=view","action=embedview");
    url = url.replace("action=default","action=embedview");
    url = url.replace("action=edit","action=embedview");
    url = url.replace("action=interactivepreview","action=embedview");

    session = new OfficeExtension.EmbeddedSession(
        url, 
        { 
            id: "embed-iframe", 
            container: document.getElementById("iframeHost") 
        });

    return session.init().then(function ()
    {
        Visio.run(session, function (ctx) 
        { 
            var eventResult = ctx.document.onDocumentLoadComplete.add(hideToolbars);      
            return ctx.sync().then(function()
            {
                console.log("Handler added to hide toolbars");
            });
        }).catch(function(error) 
        {
            window.console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) 
            {
                window.console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
        });
    });
    function hideToolbars()
    {
    Visio.run(session, function(ctx){
            var app = ctx.document.application;
            app.showToolbars = false;            
            return ctx.sync().then(function ()
            {
                console.log("Toolbars Hidden");
            });      
         }).catch(function(error)
        {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
        });
    };
}
&lt;/script&gt;
</pre>
</div>
<p>&nbsp;</p>
<h4>Basic Interactivity</h4>
<p>Change the URL and interactivity parameters in the following code sample to embed a drawing and enable/disable panning, zooming and hyperlinks by default.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

// Create an iframe to host the VisioOnline document
document.write("&lt;div id='iframeHost' /&gt;");

// Hooking up with a SharePoint event, so that document is embedded when page is loaded.
ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);

let session; // Global variable to store the session and pass it afterwards in Visio.run()

//Function which embeds the Visio file in respective frame, created earlier.
function initEmbeddedFrame() 
{
    // TODO_URL
    // Update the following url, with the desire Visio file url.
    <span style="color: blue">var url</span> = "https://contoso.sharepoint.com...";

    url = url.replace("action=view","action=embedview");
    url = url.replace("action=default","action=embedview");
    url = url.replace("action=edit","action=embedview");
    url = url.replace("action=interactivepreview","action=embedview");

    session = new OfficeExtension.EmbeddedSession(
        url, 
        { 
            id: "embed-iframe", 
            container: document.getElementById("iframeHost") 
        });

    return session.init().then(function ()
    {
        // Binding with DocumentLoadComplete event
        // If the currently Loaded page is different, change it
        Visio.run(session, function(ctx)
        {
        ctx.document.onDocumentLoadComplete.add(updateInteractions);
        return ctx.sync();
        });
    });
  }

function updateInteractions() 
  {
      Visio.run(session, function (context) 
      { 
          var documentView = context.document.view;
          //TODO_INTERACTIVITY
          //Enable/Disable pan, zoom or hyperlinks in the drawing
          <span style="color: blue">documentView.disablePan</span>=true; //Disable pan on document
          <span style="color: blue">documentView.disableZoom</span>=true; //Disable zoom on document
          <span style="color: blue">documentView.disableHyperlinks</span>=true; //Disable hyperlinks on document

          return context.sync();
          }).catch(function(error) 
          {
              window.console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) 
              {
                  window.console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
           });
}
&lt;/script&gt;
</pre>
</div>
<p>&nbsp;</p>
<h4>Periodic data refresh</h4>
<p>For data connected drawings, enable periodic refresh to keep the drawing up-to-date. Change the URL and periodic refresh frequency in the below code to suit your needs.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

// Create an iframe to host the VisioOnline document
document.write("&lt;div id='iframeHost' /&gt;");

// Hooking up with a SharePoint event, so that document is embedded when page is loaded.
ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);

let session; // Global variable to store the session and pass it afterwards in Visio.run()

//Function which embeds the Visio file in respective frame, created earlier.
function initEmbeddedFrame() 
{
    // TODO_URL
    // Update the following url, with the desire Visio file url.
    <span style="color: blue">var url</span> = "https://contoso.sharepoint.com...";

    url = url.replace("action=view","action=embedview");
    url = url.replace("action=default","action=embedview");
    url = url.replace("action=edit","action=embedview");
    url = url.replace("action=interactivepreview","action=embedview");

    session = new OfficeExtension.EmbeddedSession(
        url, 
        { 
            id: "embed-iframe", 
            container: document.getElementById("iframeHost") 
        });

    return session.init().then(function ()
    {
        // Ideally, set the timer after document is loaded.
        // If the duration is sufficiently long, you are safe
        <span style="color: blue">var timeInterval</span> = 5*60*1000; // Refresh data after 5 mins
        setInterval(periodicDataRefresh, timeInterval); // Call periodicDataRefresh after 5 mins to refresh
    });
}

function periodicDataRefresh() 
{
    Visio.run(session, function (context) 
    { 
        var document = context.document;
        document.startDataRefresh();// Actual data refresh call is being made here
        return context.sync();
    }).catch(function(error) 
    {
        window.console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) 
        {
            window.console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
}
&lt;/script&gt;
</pre>
</div>
<p>&nbsp;</p>
<h2 style="color: darkblue">Create interactive mashups with Visio Online similar to those built using Web Part connections in Visio Web Access web part</h2>
<p>Visio Web Access supported connecting to other web parts through <a href="../../../../visio/2010/02/05/no-code-mashups-with-visio-services-and-web-part-connections.htm" original-url="https://blogs.msdn.microsoft.com/visio/2010/02/05/no-code-mashups-with-visio-services-and-web-part-connections/">web part connections</a>. The following section describes how to migrate some of your interactive mashups to Visio Online through equivalent JavaScript APIs.</p>
<p><a href="https://msdnshared.blob.core.windows.net/media/2017/09/webpart.png"><img width="512" height="182" class="size-large wp-image-2366 aligncenter" alt="" src="webpart-1024x364.png" /></a></p>
<h4>Send Shape Data To</h4>
<p>In the Visio Web Access web part, this connection action allowed you to send shape data to another web part. When a shape is selected in the Web diagram, data from that shape is sent as a row. You can use the following code sample to get the same functionality with Visio Online.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

// Create an iframe to host the VisioOnline document
document.write("&lt;div id='iframeHost' /&gt;");

// Hooking up with a SharePoint event, so that document is embedded when page is loaded.
ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);

let session; // Global variable to store the session and pass it afterwards in Visio.run()

//Function which embeds the Visio file in respective frame, created earlier.
function initEmbeddedFrame() 
{
    // TODO_URL
    // Update the following url, with the desire Visio file url.
    <span style="color: blue">var url</span> = "https://contoso.sharepoint.com...";

    url = url.replace("action=view","action=embedview");
    url = url.replace("action=default","action=embedview");
    url = url.replace("action=edit","action=embedview");
    url = url.replace("action=interactivepreview","action=embedview");

    session = new OfficeExtension.EmbeddedSession(
        url, 
        { 
            id: "embed-iframe", 
            container: document.getElementById("iframeHost") 
        });

    return session.init().then(function ()
    {
        window.console.log("Session successfully initialized");
    });
}

//The other webpart, need to call this function with corresponding shapeName to read its shape data
function SendShapeData(<span style="color: blue">shapeName</span>)
{
    Visio.run(session, function (context) 
    {
        var activePage = context.document.getActivePage();
        var shape = activePage.shapes.getItem(shapeName);
        var shapeDataItem = shape.shapeDataItems.getItem(0);
        shapeDataItem.load();
        return context.sync().then(function () 
        {
            // TODO_WEBPART : Send the shape data to other web pat connection

            // or, see the details in console output
            window.console.log("Label: "+shapeDataItem.label);
            window.console.log("Value: "+shapeDataItem.value);
            window.console.log("Format: "+shapeDataItem.format);
            window.console.log("Formatted Value: "+shapeDataItem.formattedValue);
        });
    }).catch(function(error) 
    {
        window.console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) 
        {
            window.console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
}

&lt;/script&gt;
</pre>
</div>
<p>&nbsp;</p>
<h4>Get Web Drawing URL and Page Name From</h4>
<p>This web part connection action allowed you to load a web drawing or switch the displayed page. You can use the following code sample to get the same functionality with Visio Online.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

// Create an iframe to host the VisioOnline document
document.write("&lt;div id='iframeHost' /&gt;");

// Hooking up with a SharePoint event, so that document is embedded when page is loaded.
ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);

let session; // Global variable to store the session and pass it afterwards in Visio.run()

//Function which embeds the Visio file in respective frame, created earlier.
function initEmbeddedFrame() 
{
    // TODO_URL
    // Update the following url, with the desire Visio file url.
    <span style="color: blue">var url</span> = "https://contoso.sharepoint.com...";
    populateFrameWithUrl(url);
}

//Call this function to repopulate the Visio frame with new url
function populateFrameWithUrl(url)
{
    url = url.replace("action=view","action=embedview");
    url = url.replace("action=default","action=embedview");
    url = url.replace("action=edit","action=embedview");
    url = url.replace("action=interactivepreview","action=embedview");

    session = new OfficeExtension.EmbeddedSession(
        url, 
        { 
            id: "embed-iframe", 
            container: document.getElementById("iframeHost") 
        });

    return session.init().then(function ()
    {
        window.console.log("Session successfully initialized");
    });
}

// Call this function with corresponding pageName, to set the active page
function updatePage(<span style="color: blue">pageName</span>)
{
    Visio.run(session, function (context) 
    { 
        var document = context.document;
        document.setActivePage(pageName);
        return context.sync();
    }).catch(function(error) 
    {
        window.console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) 
        {
            window.console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
}
&lt;/script&gt;
</pre>
</div>
<p>One application of the above web part connection was to display two Visio web parts on the same SharePoint page and connect them such that when you click on a shape in the first web part, the second web part displays detailed related information. The following code sample demonstrates this capability.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

document.write("&lt;div id='iframeHost1' /&gt;");
document.write("&lt;div id='iframeHost2' /&gt;");

// TODO_URL : These are the URLs of two files embedded on the same page
// Scenario is - selection on file1 with url1, changes the page on file2 with url2
var url1 = "https://contoso.sharepoint.com...";
var url2 = "https://contoso.sharepoint.com...";

let session1; 
let session2; 

ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);

function initEmbeddedFrame() 
{
    url1 = url1.replace("action=view","action=embedview");
    url1 = url1.replace("action=default","action=embedview");
    url1 = url1.replace("action=edit","action=embedview");
    url1 = url1.replace("action=interactivepreview","action=embedview");
  
    url2 = url2.replace("action=view","action=embedview");
    url2 = url2.replace("action=default","action=embedview");
    url2 = url2.replace("action=edit","action=embedview");
    url2 = url2.replace("action=interactivepreview","action=embedview");

    session1 = new OfficeExtension.EmbeddedSession(
        url1, 
        { 
            id: "embed-iframe", 
            container: document.getElementById("iframeHost1") 
        });

        session1.init().then(function ()
        {
            Visio.run(session1, function(context1)
                {
                    var document1= context1.document;
                    var eventResult1 = document1.onSelectionChanged.add(function OnSelectionChange(args){
                        var activePage1 = document1.getActivePage();
                        var shapes = activePage1.allShapes;
                        shapes.load();
                        context1.sync().then(function()  
                        {
                            var toProject = args.shapeNames[0];
                            for(var i=0; i&lt;shapes.items.length;i++)
                            {
                                var shape = shapes.items[i];
                                if(shape.name == toProject)
                                {
                                    // The shape which was selected has been identified, get the displayed text on it
                                    var trimmedShapeText = shape.text;
                                    // Shape text may contain an empty line sometimes, ignore it.
                                    trimmedShapeText = trimmedShapeText.trim().replace(&quot;\n&quot;,&quot;&quot;);
                                    onSelectionChangedHandler(trimmedShapeText);
                                    break;
                                }
                            } 
                        });
                });

                return context1.sync();
            });
        });

        session2 = new OfficeExtension.EmbeddedSession(
            url2, 
            { 
                id: &quot;embed-iframe&quot;, 
                container: document.getElementById(&quot;iframeHost2&quot;) 
            });
        session2.init().then(function ()
        {
                console.log(&quot;Session2 initialized&quot;);
        }).catch(function(error)
        {
            window.console.log(&quot;Error: &quot; + error);
            if (error instanceof OfficeExtension.Error) 
            {
                window.console.log (&quot;Debug info: &quot; + JSON.stringify(error.debugInfo));
            }
        });          
        
}


function onSelectionChangedHandler(pageName)
{
    Visio.run(session2, function(context2)
    {
        var document2 = context2.document;
        document2.setActivePage(pageName);
        return context2.sync();
    });
}


&lt;/script&gt;
</pre>
</div>
<p>&nbsp;</p>
<h4>Get Shapes to Highlight From</h4>
<p>This web part connection action allowed you to highlight a list of shapes in a diagram. You can use the following sample code to get the same functionality with Visio Online.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

// Create an iframe to host the VisioOnline document
document.write("&lt;div id='iframeHost' /&gt;");

// Hooking up with a SharePoint event, so that document is embedded when page is loaded.
ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);

let session; // Global variable to store the session and pass it afterwards in Visio.run()

//Function which embeds the Visio file in respective frame, created earlier.
function initEmbeddedFrame() 
{
    // TODO_URL
    // Update the following url, with the desired Visio file url.
    <span style="color: blue">var url</span> = "https://contoso.sharepoint.com...";

    url = url.replace("action=view","action=embedview");
    url = url.replace("action=default","action=embedview");
    url = url.replace("action=edit","action=embedview");
    url = url.replace("action=interactivepreview","action=embedview");

    session = new OfficeExtension.EmbeddedSession(
        url, 
        { 
            id: "embed-iframe", 
            container: document.getElementById("iframeHost") 
        });

    return session.init().then(function ()
    {
        window.console.log("Session successfully initialized");
    });
}

//The other webpart, needs to call this function with corresponding shapeName to highlight it
function highlightShape(<span style="color: blue">shapeName</span>)
{
    Visio.run(session, function(context)
    {
        var page = context.document.getActivePage();
        var shapes = page.shapes;
        shapes.load();

        return context.sync().then(function()
        {
            var shape = shapes.getItem(shapeName)
            var view = shape.view;
            //Highlight the shape
            view.highlight = {color: "red", width:2 };
            context.sync();
        });
    }).catch(function (error)
    {
        window.console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) 
        {
            window.console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
}

&lt;/script&gt;
</pre>
</div>
<p>&nbsp;</p>
<h4>Get Shape to View From</h4>
<p>This web part connection action allowed you to center the view on a particular shape and change the zoom percentage of the diagram. You can use the following sample code to get the same functionality with Visio Online.</p>
<div style="border: silver 1px solid;max-height: 200px;overflow: auto;background-color: f4f4f4">
<pre style="border: none">&lt;script src='https://appsforoffice.microsoft.com/embedded/1.0/visio-web-embedded.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;

// Create an iframe to host the VisioOnline document
document.write("&lt;div id='iframeHost' /&gt;");

// Hooking up with a SharePoint event, so that document is embedded when page is loaded.
ExecuteOrDelayUntilBodyLoaded(initEmbeddedFrame);

let session; // Global variable to store the session and pass it afterwards in Visio.run()

//Function which embeds the Visio file in respective frame, created earlier.
function initEmbeddedFrame() 
{
    // TODO_URL
    // Update the following url, with the desire Visio file url.
    <span style="color: blue">var url</span> = "https://contoso.sharepoint.com...";

    url = url.replace("action=view","action=embedview");
    url = url.replace("action=default","action=embedview");
    url = url.replace("action=edit","action=embedview");
    url = url.replace("action=interactivepreview","action=embedview");

    session = new OfficeExtension.EmbeddedSession(
        url, 
        { 
            id: "embed-iframe", 
            container: document.getElementById("iframeHost") 
        });

    return session.init().then(function ()
    {
        window.console.log("Session successfully initialized");
    });
}

//The other web part, need to call this function with corresponding shapeName to bring it in center of viewport
function bringShapeInViewPort(<span style="color: blue">shapeName</span>)
{
    Visio.run(session, function (context) 
    { 
        var activePage = context.document.getActivePage();
        var shape = activePage.shapes.getItem(shapeName);
        return  context.sync().then(function () 
        {
            if (typeof shape != 'undefined')
            {
                //Bring the corresponding shape into center of Viewport
                activePage.view.centerViewportOnShape(shape.id);
                context.sync();
            }
        });

    }).catch(function(error) 
    {
        window.console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) 
        {
            window.console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
}
&lt;/script&gt;
</pre>
</div>
<p>&nbsp;</p>
<h2 style="color: darkblue">Create rich interactive mashups with Visio Online similar to those built using Visio Services JavaScript mashup API</h2>
<p>The Visio Services JavaScript Mashup API enabled developers to access and manipulate the Visio web drawing. The new Visio JavaScript APIs fill some gaps that were in Visio Web Access, are more aligned with Office Extensibility, and provide solution-building capabilities on par with existing APIs, and more. For more information, see <a href="https://dev.office.com/blogs/visio-javascript-apis-preview">Benefits of using the Visio JavaScript APIs over Visio Web Access APIs</a>.</p>
<h4>High level class diagram for new Visio JavaScript APIs</h4>
<p><a href="https://msdnshared.blob.core.windows.net/media/2017/09/Class-Diagram.png"><img width="1024" height="540" class="alignleft size-large wp-image-2295" alt="" src="Class-Diagram-1024x540.png" /></a></p>
<p>Below table describes the new equivalent APIs as compared to Visio Web Access APIs.</p>
<table style="border-collapse: collapse;width: 60%">
<tbody>
<tr>
<th style="border: 1px solid #dddddd">Visio Web Access APIs</th>
<th style="border: 1px solid #dddddd">New Visio JavaScript APIs</th>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.diagramcomplete Event</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/documentloadcompleteeventargs">DocumentLoadCompleteEvent</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.shapemouseenter Event</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapemouseentereventargs">ShapeMouseEnter Event</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.shapemouseleave Event</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapemouseleaveeventargs">ShapeMouseLeave Event</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.shapeselectionchanged Event</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/selectionchangedeventargs">SelectionChanged Event</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.VwaControl.getActivePage</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/document">Document.getActivePage</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.VwaControl.getAllPageIds</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/document">Document.pages</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.VwaControl.refreshDiagram</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/document">Document.startDataRefresh</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.VwaControl.setActivePage</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/document">Document.setActivePage</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.centerViewOnShape</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/pageview">Page.View.centerViewportOnShape</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.getId</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/page">Page.index</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.getSelectedShape</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/pageview">Page.View.getSelection</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.getShapes</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/page">Page.shapes</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.getZoom</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/pageview">Page.View.zoom</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.isShapeInView</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/pageview">Page.View.isShapeInViewport</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.setSelectedShape</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shape">Shape.select</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.setZoom</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/pageview">Page.View.zoom</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.ShapeCollection.getCount</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapecollection">ShapeCollection.getCount</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.ShapeCollection.getItemAtIndex</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapecollection">ShapeCollection.items[i]</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.ShapeCollection.getItemById</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapecollection">ShapeCollection.getItem</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.ShapeCollection.getItemByName</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapecollection">ShapeCollection.getItem</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.addHighlight</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapeview">Shape.View.highlight</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.addOverlay</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapeview">Shape.View.addOverlay</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.getBounds</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shape">Shape.getBounds</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.getHyperlinks</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shape">Shape.hyperlinks</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.getId</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shape">Shape.id</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.getName</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shape">Shape.name</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.getShapeData</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shape">Shape.shapeDataItems</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.removeHighlight</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapeview">Shape.View.highlight</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.removeOverlay</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shapeview">Shape.View.removeOverlay</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.getPosition</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/pageview">Page.View.getPosition</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.setPosition</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/pageview">Page.View.setPosition</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Page.getSize</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/page">Page.height, Page.width</a></td>
</tr>
<tr>
<td style="border: 1px solid #dddddd">Vwa.Shape.getcomments</td>
<td style="border: 1px solid #dddddd"><a href="https://dev.office.com/reference/add-ins/visio/shape">Shape.comments</a></td>
</tr>
</tbody>
</table>
<p>You can find the complete documentation on <a href="https://dev.office.com/reference/add-ins/visio/visio-javascript-reference-overview">Visio JavaScript APIs</a>. Get started today with the new APIs to migrate your mashup solutions and make them even richer. Share your feedback and requests at <a href="https://visio.uservoice.com/forums/368199-visio-online">UserVoice</a>.</p>
<p>Rahul Mittal, Program Manager, Microsoft Visio<br />
Tarun Vashistha, Senior Software Engineer, Microsoft Visio</p>
	</div><!-- .entry-content -->
<hr>

</article><!-- #post-## -->
</div><!-- #single-content -->
</div><!-- #primary -->
<!-- Before Navigation --></main><!-- #site-main -->

<a class=""""screen-reader-shortcut"""" href=""""#primary"""" tabindex=""""1""""></a> 

<div id=""secondary"" class=""sidebar col-sm-3"">
	<div id=""sidebar-widget-area"" class=""sidebar-widget-area"" role=""complementary"">
		<div class=""widget sfmsb_widget"">

		</div>
		<aside id="tag_cloud-2" class="widget widget_tag_cloud">
</aside>
<aside id="msdn-archive-widget-2" class="widget msdn-archive-widget"><h2 class="widget-title">Archives</h2>	
	<li><a href='..\..\..\years\2018\index.htm'>All of 2018</a>&nbsp;(5)</li>
	<li><a href='..\..\..\years\2017\index.htm'>All of 2017</a>&nbsp;(8)</li>
	<li><a href='..\..\..\years\2016\index.htm'>All of 2016</a>&nbsp;(3)</li>
	<li><a href='..\..\..\years\2012\index.htm'>All of 2012</a>&nbsp;(2)</li>
	<li><a href='..\..\..\years\2011\index.htm'>All of 2011</a>&nbsp;(11)</li>
	<li><a href='..\..\..\years\2010\index.htm'>All of 2010</a>&nbsp;(35)</li>
	<li><a href='..\..\..\years\2009\index.htm'>All of 2009</a>&nbsp;(50)</li>
	<li><a href='..\..\..\years\2008\index.htm'>All of 2008</a>&nbsp;(11)</li>
	<li><a href='..\..\..\years\2007\index.htm'>All of 2007</a>&nbsp;(26)</li>
	<li><a href='..\..\..\years\2006\index.htm'>All of 2006</a>&nbsp;(46)</li>
</aside>
</div><!-- #secondary -->
</div><!-- .site-content -->
</div>

<footer id="site-footer" class="site-footer row" role="contentinfo">
	<div id="site-info" class="site-info">
		<div id="footer-text" class="col-sm-4 col-sm-offset-6">
			<span>
				<a href="https://privacy.microsoft.com" data-mscc-ic="false">Privacy</a>
			</span>
			<span>
				<a href="https://msdn.microsoft.com/cc300389" data-mscc-ic="false">Terms of Use</a>
			</span>
			<span>
				<a href="https://www.microsoft.com/en-us/legal/intellectualproperty/Trademarks/EN-US.aspx" data-mscc-ic="false">Trademarks</a>
			</span>
		</div>
		<div id="footer-far" class="col-sm-2">
			<div id="footer-microsoft-logo">
				<a href="https://www.microsoft.com" aria-label="Microsoft Logo">
					<svg id="footer-microsoft-logo-svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 347 70.5" enable-background="new 0 0 347 70.5"><g fill="#fff"><path d="M39.5 44.6l-2.8 7.9h-.2c-.5-1.8-1.3-4.5-2.7-7.8l-15-37.7h-14.7v60h9.7v-37c0-2.3 0-5-.1-8.2-.1-1.6-.2-2.9-.3-3.8h.2c.5 2.3 1 4 1.4 5.1l18 43.8h6.8l17.9-44.2c.4-1 .8-3 1.2-4.7h.2c-.2 4.4-.4 8.4-.5 10.8v38.1h10.4v-60h-14.1l-15.4 37.7zM78.8 23.9h10.1v43h-10.1zM83.9 5.7c-1.7 0-3.1.6-4.3 1.7-1.2 1.1-1.8 2.5-1.8 4.2 0 1.6.6 3 1.8 4.1 1.2 1.1 2.6 1.6 4.3 1.6 1.7 0 3.2-.6 4.3-1.6 1.2-1.1 1.8-2.5 1.8-4.1 0-1.6-.6-3-1.8-4.2-1-1.2-2.5-1.7-4.3-1.7M124.7 23.5c-1.9-.4-3.8-.6-5.7-.6-4.6 0-8.8 1-12.3 3s-6.3 4.8-8.1 8.3c-1.9 3.6-2.8 7.7-2.8 12.4 0 4.1.9 7.8 2.7 11.1 1.8 3.3 4.3 5.9 7.6 7.7 3.2 1.8 6.9 2.7 11.1 2.7 4.8 0 8.9-1 12.2-2.9l.1-.1v-9.3l-.4.3c-1.5 1.1-3.2 2-4.9 2.6-1.8.6-3.4.9-4.8.9-4 0-7.2-1.2-9.5-3.7s-3.5-5.9-3.5-10.2c0-4.4 1.2-7.9 3.6-10.5 2.4-2.6 5.6-3.9 9.5-3.9 3.3 0 6.6 1.1 9.6 3.3l.4.3v-9.8l-.1-.1c-1.2-.6-2.8-1.1-4.7-1.5M158 23.2c-2.5 0-4.8.8-6.8 2.4-1.7 1.4-2.9 3.4-3.9 5.8h-.1v-7.4h-10.1v43h10.1v-22c0-3.7.8-6.8 2.5-9.1s3.9-3.5 6.5-3.5c.9 0 1.9.2 3 .4 1.1.3 1.9.6 2.4 1l.4.3v-10.2l-.2-.1c-.8-.4-2.1-.6-3.8-.6M185.5 22.9c-7.1 0-12.7 2.1-16.7 6.2s-6 9.8-6 16.9c0 6.7 2 12.1 5.9 16.1 3.9 3.9 9.2 5.9 15.8 5.9 6.9 0 12.4-2.1 16.4-6.3 4-4.2 6-9.8 6-16.7 0-6.8-1.9-12.3-5.7-16.2-3.7-3.9-9-5.9-15.7-5.9m8 33.1c-1.9 2.4-4.8 3.6-8.5 3.6s-6.6-1.2-8.7-3.7c-2.1-2.4-3.1-5.9-3.1-10.3 0-4.6 1.1-8.1 3.1-10.6 2.1-2.5 5-3.7 8.6-3.7 3.6 0 6.4 1.2 8.4 3.6 2 2.4 3.1 5.9 3.1 10.5s-1 8.2-2.9 10.6M229.3 41.7c-3.2-1.3-5.2-2.3-6.1-3.2-.8-.8-1.2-1.9-1.2-3.3 0-1.2.5-2.3 1.6-3.1 1.1-.8 2.5-1.2 4.4-1.2 1.7 0 3.5.3 5.2.8 1.7.5 3.3 1.2 4.5 2.1l.4.3v-9.4l-.2-.1c-1.2-.5-2.7-.9-4.6-1.3-1.9-.3-3.6-.5-5-.5-4.8 0-8.8 1.2-11.9 3.7-3.1 2.4-4.6 5.7-4.6 9.5 0 2 .3 3.8 1 5.3s1.7 2.9 3.1 4c1.4 1.1 3.4 2.3 6.2 3.5 2.3 1 4.1 1.8 5.2 2.4 1.1.6 1.8 1.3 2.3 1.9.4.6.6 1.4.6 2.4 0 2.9-2.2 4.3-6.6 4.3-1.7 0-3.5-.3-5.6-1-2.1-.7-4-1.7-5.7-2.9l-.4-.3v9.9l.2.1c1.5.7 3.3 1.2 5.4 1.7 2.2.4 4.1.7 5.8.7 5.2 0 9.5-1.2 12.5-3.7 3.1-2.5 4.7-5.7 4.7-9.8 0-2.9-.8-5.4-2.5-7.4-1.8-2-4.7-3.8-8.7-5.4M267.6 22.9c-7.1 0-12.7 2.1-16.7 6.2s-6 9.8-6 16.9c0 6.7 2 12.1 5.9 16.1 3.9 3.9 9.2 5.9 15.8 5.9 6.9 0 12.4-2.1 16.4-6.3 4-4.2 6-9.8 6-16.7 0-6.8-1.9-12.3-5.7-16.2-3.8-3.9-9.1-5.9-15.7-5.9m8 33.1c-1.9 2.4-4.8 3.6-8.5 3.6s-6.6-1.2-8.7-3.7c-2.1-2.4-3.1-5.9-3.1-10.3 0-4.6 1.1-8.1 3.1-10.6 2.1-2.5 5-3.7 8.6-3.7 3.5 0 6.4 1.2 8.4 3.6 2 2.4 3.1 5.9 3.1 10.5s-1 8.2-2.9 10.6"/><path d="M342.9 32.2v-8.2h-10.2v-12.9l-.3.1-9.6 2.9-.2.1v9.7h-15.2v-5.4c0-2.5.6-4.4 1.7-5.7 1.1-1.3 2.7-1.9 4.7-1.9 1.4 0 2.9.3 4.5 1l.4.2v-8.7l-.2-.1c-1.4-.5-3.3-.8-5.7-.8-3 0-5.7.7-8.1 1.9-2.4 1.3-4.2 3.1-5.5 5.5-1.3 2.3-2 5-2 8v6h-7.2v8.2h7.1v34.8h10.2v-34.7h15.2v22.1c0 9.1 4.3 13.7 12.8 13.7 1.4 0 2.9-.2 4.3-.5 1.5-.3 2.6-.7 3.2-1l.1-.1v-8.3l-.4.3c-.6.4-1.2.7-2.1.9-.8.2-1.5.3-2 .3-2 0-3.4-.5-4.4-1.6-.9-1.1-1.4-2.9-1.4-5.5v-20.3h10.3z"/></g></svg>
				</a>
			</div>
			<div id="copyright">
				© 2006 - 2018 Microsoft
			</div>
		</div>
	</div><!-- .site-info -->
</footer><!-- .site-footer -->

</div><!-- .site -->

</body>
</html>