<!DOCTYPE html>
<html lang="en-US">
<head>
              <meta charset="UTF-8">
	<meta name="viewport" content="width=device-width">
	<link rel="profile" href="http://gmpg.org/xfn/11">
	<link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.5/css/bootstrap.min.css">
<title>The Visio 2010 Connectivity API &#8211; Visio Insights</title>
<link rel='dns-prefetch' href='//ajax.aspnetcdn.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel='stylesheet' id='wds-ratings-css'  href='https://blogs.msdn.microsoft.com/wp-content/plugins/wds-ratings/wds-ratings.css?ver=20161014' type='text/css' media='all' />
<link rel='stylesheet' id='microsoft-parent-style-css'  href='https://blogs.msdn.microsoft.com/wp-content/themes/microsoft/style.css?ver=02092017' type='text/css' media='all' />
<link rel='stylesheet' id='microsoft-child-style-css'  href='https://blogs.msdn.microsoft.com/wp-content/themes/microsoft-msdn/style.css?ver=04152016' type='text/css' media='all' />
	<div id='msccBanner' dir='ltr' data-site-name='uhf-TechNetBlogs' data-mscc-version='0.4.0' data-nver='aspnet-2.0.7' data-sver='0.1.2' class='cc-banner' role='alert'>
<link rel=""shortcut icon"" href=""https://i1.social.s-msft.com/Forums/GlobalResources/images/Technet/favicon.ico"">

<link rel="canonical" href="https://blogs.msdn.microsoft.com/visio/2009/09/23/the-visio-2010-connectivity-api/" />
<!-- og:title -->
<meta property="og:title" content="The Visio 2010 Connectivity API" />
<!-- og:description -->
<meta property="og:description" content="Our previous post on AutoConnect in Visio 2010 discussed how Visio 2010 makes it simpler and faster for end users to create connected diagrams such as flowcharts. Many developers will be pleased to hear that Visio 2010 also brings greatly simplified utilities for working with connected diagrams programmatically. The Visio 2010 API contains new methods..." />
</head>
<body class="post-template-default single single-post postid-793 single-format-standard">
<div id="page" class="site container-fluid">
	<header id="site-header" class="site-header row" role="banner">
		<div id="site-header-global-wrapper" class="site-header-global-wrapper">
			<div id="site-header-global" class="site-header-global">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#site-profile-menu" aria-label="toggle menu" tabindex="0" aria-expanded="false">
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				<div id="site-logo" class="col-sm-5 row navbar-header">
					<div id="header-microsoft-logo">
						<a id="home-link" href="https://www.microsoft.com/" tabindex="1" aria-label="Microsoft logo">
							<img id="header-microsoft-logo-svg" src="https://blogs.msdn.microsoft.com/visio/wp-content/themes/microsoft/images/ms-logo-gray.svg" alt="Microsoft logo">
							<span id="brand">
								<span id="brand-separator">|</span>
								<span id="brand-name"></span>
							</span>
						</a>
					</div>
				</div>
				<div id="site-header-global-right" class="col-sm-7">
				</div>
			</div>

		</div>
		<div id="site-header-blog-wrapper" class="site-header-blog-wrapper ms-blog-header clear-both">
			<div id="site-header-blog" class="site-header-blog">
				<nav class="navbar navbar-inverse">
					<div id="blog-logo-area" class="navbar-header">
						<div id="blog-logo" data-toggle="collapse" data-target="#blog-menu" tabindex="0" aria-label="blog logo">
														<div id="blog-logo-text">
<h1 class="site-title ms-blog-title">
					<a href="https://blogs.msdn.microsoft.com/visio" class="for-desktop">
						Visio Insights					</a>
					<a href="https://blogs.msdn.microsoft.com/visio" class="for-mobile">
						Visio Insights					</a>
				</h1>
<!-- blog description -->
<p class="site-description ms-blog-description">The official blog of the Microsoft Visio product team</p>
			</div>
									</div>
					</div>
									</nav>
			</div>
			
		</div>
		<div id="site-content" class="site-content row">

	<div id="primary" class="content-area col-sm-9">
	<main id="site-main" class="site-main" role="main">
		<div id="single-content" class="div-content">
<!-- Post start -->
<article id="post-793" class="post-793 post type-post status-publish format-standard hentry category-uncategorized tag-all-posts tag-programming tag-visio-2010">
	<header class="entry-header">
<h1 class="entry-title">The Visio 2010 Connectivity API</h1>
<div class="entry-meta">
<span class="byline"><span class="author vcard"><a class="url fn n profile-usercard-hover" data-profile-userid="eb78383b108c4193a0a593011dd29f8e" href="https://social.msdn.microsoft.com/profile/Visio+Team">Visio Team</a></span>
</span><span class="posted-on posted-on-margin">
			<span class="screen-reader-text"></span>
<time class="entry-date published updated" datetime="2009-09-23T02:31:00+00:00">September 23, 2009</time>
			</span>
		</div>
		<hr>
	</header><!-- .entry-header -->
<div class="entry-content single">
		<p><P>Our <A href="http://blogs.msdn.com/visio/archive/2009/09/22/autoconnect-in-visio-2010.aspx" mce_href="http://blogs.msdn.com/visio/archive/2009/09/22/autoconnect-in-visio-2010.aspx">previous post on AutoConnect in Visio 2010</A> discussed how Visio 2010 makes it simpler and faster for end users to create connected diagrams such as flowcharts. Many developers will be pleased to hear that Visio 2010 also brings greatly simplified utilities for working with connected diagrams programmatically. The Visio 2010 API contains new methods that let developers manipulate and traverse connected diagrams or graphs at a higher level of abstraction than previously, which can result in greater programmer productivity and more concise, readable code.</P><br />
<P>In this blog post, we will introduce the new Visio 2010 methods used for working with connected diagrams. Then we will see these methods in action by doing a visual walk-through of a program that manipulates a flowchart. (The source code and diagram used below are also available for download <A href="http://cid-bc8c3347838f4d4f.skydrive.live.com/self.aspx/.Public/Connectivity%20API%20Blog%20Post.zip" mce_href="http://cid-bc8c3347838f4d4f.skydrive.live.com/self.aspx/.Public/Connectivity%20API%20Blog%20Post.zip">here</A>.)</P><br />
<H2>New connectivity methods in Visio 2010</H2><br />
<P>For each of the following API methods, we give a brief description on what the method does, along with an explanation of the method’s arguments. This is not meant to be a complete reference; the forthcoming Visio 2010 SDK will contain much more complete documentation on these methods.</P><br />
<H3>Shape<B>.ConnectedShapes(Flags, CategoryFilter)</B></H3><br />
<P>Returns an array of identifiers (IDs) of shapes that are one degree of separation away from the given shape (i.e. separated by a 1-D connector).</P><br />
<P>Arguments:</P><br />
<UL><br />
<LI>Flags: Filters the list of returned shape IDs by the directionality of the connectors. </LI><br />
<LI>CategoryFilter: Filters the list of returned shape IDs by limiting it to IDs of shapes that match the specified category. A shape’s categories can be found in the User.msvShapeCategories cell of its ShapeSheet. </LI></UL><br />
<H3>Shape<B>.GluedShapes(Flags, CategoryFilter, pOtherConnectedShape)</B></H3><br />
<P>Returns an array of identifiers for the shapes that are glued to a shape. For instance, if the given shape is a 2-D shape that has multiple connectors attached to it, this method would return the IDs of those connectors. If the given shape is a connector, this method would return the IDs of the shapes to which its ends are glued.</P><br />
<P>Arguments:</P><br />
<UL><br />
<LI>Flags: Specifies dimensionality and directionality of connectors of shapes returned. </LI><br />
<LI>CategoryFilter: Specifies category of shapes returned. </LI><br />
<LI>pOtherConnectedShape: Optional additional shape to which returned shapes must also be glued </LI></UL><br />
<H3>Page.DropConnected(ObjectToDrop, TargetShape, PlacementDir, [Connector])</H3><br />
<P>Creates a new Shape object on the page, places the new shape relative to the specified existing target shape, and adds a connector from the existing shape to the new shape. Returns the newly created shape. This feature parallels the AutoConnect feature in the Visio user interface.</P><br />
<P>Arguments:</P><br />
<UL><br />
<LI>ObjectToDrop: The shape to be added to the page </LI><br />
<LI>TargetShape: The existing shape from which to align, space, and connect </LI><br />
<LI>PlacementDir: The direction from TargetShape in which to place ObjectToDrop</LI><br />
<LI>Connector: The connector to use (optional). This overrides usage of the default Dynamic Connector.</LI></UL><br />
<H3>Page.SplitConnector<B>(ConnectorToSplit, Shape)</B></H3><br />
<P>Splits the specified connector with the specified shape. Returns the new, duplicated connector.</P><br />
<P>Arguments:</P><br />
<UL><br />
<LI>ConnectorToSplit: The connector to split. Must be a routable 1-D connector. </LI><br />
<LI>Shape: The shape to use to split the connector. Must be a 2-D shape. </LI></UL><br />
<H3>Shape.Disconnect(ConnectorEnd, OffsetX, OffsetY, Units) </H3><br />
<P>Unglues the specified connector end points and offsets them the specified amount from the shapes they were joined to. </P><br />
<P>Arguments:</P><br />
<UL><br />
<LI>ConnectorEnd: The end of the connector to disconnect </LI><br />
<LI>OffsetX: The <I>x</I>-distance that the connector end is moved away from the shape </LI><br />
<LI>OffsetY: The <I>y</I>-distance that the connector end is moved away from the shape </LI><br />
<LI>Units: The units of measure for the assigned offset values </LI></UL><br />
<H3>Page.AutoConnectMany<B>(FromShapeIDs(), ToShapeIDs(), PlacementDirs(), [Connector])</B></H3><br />
<P>Automatically draws multiple connections in the specified directions between the specified shapes. Returns the number of shapes connected.</P><br />
<P>Arguments:</P><br />
<UL><br />
<LI>FromShapeIDs(): An array of identifers of the shapes from which to draw a connection </LI><br />
<LI>ToShapeIDs(): An array of identifers of the shapes to which to draw a connection </LI><br />
<LI>PlacementDirs(): An array of constants that represent the directions in which to draw the connection </LI><br />
<LI>Connector: The connector to use (optional). This overrides usage of the default Dynamic Connector.</LI></UL><br />
<H2>Let’s try it out!</H2><br />
<P>Here is a screenshot of a Visio drawing we will be manipulating and traversing:</P><br />
<P><A href="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/BlogFileStorage/blogs_msdn/visio/WindowsLiveWriter/ConnectivityAPI_13A04/1_2.png" original-url="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/1_2.png" mce_href="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/1_2.png"><img style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline; BORDER-TOP: 0px; BORDER-RIGHT: 0px" title=1 border=0 alt=1 src="1_thumb.png" original-url="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/1_thumb.png" width=644 height=187 mce_src="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/1_thumb.png"></A> </P><br />
<P>Using a few of the above listed methods, we’ll add to this flowchart and traverse it. Each step along the way, we’ll show you the corresponding line of C# code along with a screenshot of the change it caused.</P><br />
<P><STRONG>Note</STRONG>: In the below code snippets, <FONT face="courier new">page</FONT> refers to the active drawing page, and the <FONT face="courier new">Visio</FONT> namespace is an abbreviation of <FONT face="courier new">Microsoft.Office.Interop.Visio</FONT>. The meanings of most other variables should be apparent from the context.</P><br />
<P>First, let's split the connector that currently connects "Start Event" to "Task" and insert a Sub-Process shape. We can access that connector using the <STRONG>GluedShapes</STRONG> method. Once we’ve accessed the connector, we use <STRONG>SplitConnector</STRONG> to split it.</P><br />
<P><FONT face="courier new">Array shapesGluedToStartEvent = <BR>&nbsp;&nbsp;&nbsp; startEvent.GluedShapes(Visio.VisGluedShapesFlags.visGluedShapesOutgoing1D, "", null); <BR>// In this example, the above array has 1 element. Let's get that element. <BR>int splittableConnectorID = (int)shapesGluedToStartEvent.GetValue(0); <BR>Visio.Shape splittableConnector = page.Shapes.get_ItemFromID(splittableConnectorID); <BR>page.SplitConnector(splittableConnector, subprocessMaster); </FONT></P><A href="http://11011.net/software/vspaste" mce_href="http://11011.net/software/vspaste"></A><br />
<P>This yields the following result:</P><br />
<P><A href="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/BlogFileStorage/blogs_msdn/visio/WindowsLiveWriter/ConnectivityAPI_13A04/2_2.png" original-url="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/2_2.png" mce_href="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/2_2.png"><img style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline; BORDER-TOP: 0px; BORDER-RIGHT: 0px" title=2 border=0 alt=2 src="2_thumb.png" original-url="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/2_thumb.png" width=644 height=187 mce_src="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/2_thumb.png"></A> </P><br />
<P>Let's say we want to programmatically access the "Task" shape. If we have a reference to "Start Event", we can access "Task" by traversing across "Sub-Process", using <STRONG>ConnectedShapes</STRONG>.</P><br />
<P><FONT face="courier new">Array shapesConnectedToByStartEvent = <BR>&nbsp;&nbsp;&nbsp; startEvent.ConnectedShapes(Visio.VisConnectedShapesFlags.visConnectedShapesOutgoingNodes, ""); <BR>// In this example, the above array has 1 element. Let's get that element. <BR>int subProcessID = (int)shapesConnectedToByStartEvent.GetValue(0); <BR>Visio.Shape subProcess = page.Shapes.get_ItemFromID(subProcessID); </FONT></P><br />
<P><FONT face="courier new">// Repeating the same action as above to get from "Sub-Process" to "Task". <BR>Array shapesConnectedToBySubProcess = <BR>&nbsp;&nbsp;&nbsp; subProcess.ConnectedShapes(Visio.VisConnectedShapesFlags.visConnectedShapesOutgoingNodes, ""); <BR>int taskID = (int)shapesConnectedToBySubProcess.GetValue(0); <BR>Visio.Shape task = page.Shapes.get_ItemFromID(taskID);</FONT> </P><br />
<P>Now let's use <STRONG>DropConnected</STRONG> to drop an End Event shape onto the page and have "Task" connect to it. We use the default connector, so the last argument can be null.</P><br />
<P><FONT face="courier new">Visio.Shape endEvent = page.DropConnected(endEventMaster, <BR>&nbsp;&nbsp;&nbsp; task, <BR>&nbsp;&nbsp;&nbsp; Visio.VisAutoConnectDir.visAutoConnectDirRight, <BR>&nbsp;&nbsp;&nbsp; null); </FONT></P><A href="http://11011.net/software/vspaste" mce_href="http://11011.net/software/vspaste"></A><br />
<P>This yields the following result:</P><br />
<P><A href="https://msdnshared.blob.core.windows.net/media/TNBlogsFS/BlogFileStorage/blogs_msdn/visio/WindowsLiveWriter/ConnectivityAPI_13A04/3_2.png" original-url="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/3_2.png" mce_href="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/3_2.png"><img style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline; BORDER-TOP: 0px; BORDER-RIGHT: 0px" title=3 border=0 alt=3 src="3_thumb.png" original-url="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/3_thumb.png" width=644 height=187 mce_src="http://blogs.msdn.com/blogfiles/visio/WindowsLiveWriter/ConnectivityAPI_13A04/3_thumb.png"></A> </P><br />
<P>We hope this walk-through was a helpful illustration of Visio 2010’s new API utilities for working with connected diagrams. This article covers only a small part of the enhancements made to Visio’s API for the 2010 release; more information will come in future posts on this blog, and with the release of the Visio 2010 SDK.</P><br />
<P>We’re interested to hear what developers think of this API functionality, so please use the <A href="http://blogs.technet.com/office2010/archive/2009/07/15/tell-us-what-you-think-about-office-2010-technical-preview.aspx" mce_href="http://blogs.technet.com/office2010/archive/2009/07/15/tell-us-what-you-think-about-office-2010-technical-preview.aspx">Send a Smile feedback tool</A> or leave a comment below.</P></p>
	</div><!-- .entry-content -->
<hr>

</article><!-- #post-## -->
</div><!-- #single-content -->
</div><!-- #primary -->
<!-- Before Navigation --></main><!-- #site-main -->

<a class=""""screen-reader-shortcut"""" href=""""#primary"""" tabindex=""""1""""></a> 

<div id=""secondary"" class=""sidebar col-sm-3"">
	<div id=""sidebar-widget-area"" class=""sidebar-widget-area"" role=""complementary"">
		<div class=""widget sfmsb_widget"">

		</div>
		<aside id="tag_cloud-2" class="widget widget_tag_cloud">
</aside>
<aside id="msdn-archive-widget-2" class="widget msdn-archive-widget"><h2 class="widget-title">Archives</h2>	
	<li><a href='..\..\..\years\2018\index.htm'>All of 2018</a>&nbsp;(5)</li>
	<li><a href='..\..\..\years\2017\index.htm'>All of 2017</a>&nbsp;(8)</li>
	<li><a href='..\..\..\years\2016\index.htm'>All of 2016</a>&nbsp;(3)</li>
	<li><a href='..\..\..\years\2012\index.htm'>All of 2012</a>&nbsp;(2)</li>
	<li><a href='..\..\..\years\2011\index.htm'>All of 2011</a>&nbsp;(11)</li>
	<li><a href='..\..\..\years\2010\index.htm'>All of 2010</a>&nbsp;(35)</li>
	<li><a href='..\..\..\years\2009\index.htm'>All of 2009</a>&nbsp;(50)</li>
	<li><a href='..\..\..\years\2008\index.htm'>All of 2008</a>&nbsp;(11)</li>
	<li><a href='..\..\..\years\2007\index.htm'>All of 2007</a>&nbsp;(26)</li>
	<li><a href='..\..\..\years\2006\index.htm'>All of 2006</a>&nbsp;(46)</li>
</aside>
</div><!-- #secondary -->
</div><!-- .site-content -->
</div>

<footer id="site-footer" class="site-footer row" role="contentinfo">
	<div id="site-info" class="site-info">
		<div id="footer-text" class="col-sm-4 col-sm-offset-6">
			<span>
				<a href="https://privacy.microsoft.com" data-mscc-ic="false">Privacy</a>
			</span>
			<span>
				<a href="https://msdn.microsoft.com/cc300389" data-mscc-ic="false">Terms of Use</a>
			</span>
			<span>
				<a href="https://www.microsoft.com/en-us/legal/intellectualproperty/Trademarks/EN-US.aspx" data-mscc-ic="false">Trademarks</a>
			</span>
		</div>
		<div id="footer-far" class="col-sm-2">
			<div id="footer-microsoft-logo">
				<a href="https://www.microsoft.com" aria-label="Microsoft Logo">
					<svg id="footer-microsoft-logo-svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 347 70.5" enable-background="new 0 0 347 70.5"><g fill="#fff"><path d="M39.5 44.6l-2.8 7.9h-.2c-.5-1.8-1.3-4.5-2.7-7.8l-15-37.7h-14.7v60h9.7v-37c0-2.3 0-5-.1-8.2-.1-1.6-.2-2.9-.3-3.8h.2c.5 2.3 1 4 1.4 5.1l18 43.8h6.8l17.9-44.2c.4-1 .8-3 1.2-4.7h.2c-.2 4.4-.4 8.4-.5 10.8v38.1h10.4v-60h-14.1l-15.4 37.7zM78.8 23.9h10.1v43h-10.1zM83.9 5.7c-1.7 0-3.1.6-4.3 1.7-1.2 1.1-1.8 2.5-1.8 4.2 0 1.6.6 3 1.8 4.1 1.2 1.1 2.6 1.6 4.3 1.6 1.7 0 3.2-.6 4.3-1.6 1.2-1.1 1.8-2.5 1.8-4.1 0-1.6-.6-3-1.8-4.2-1-1.2-2.5-1.7-4.3-1.7M124.7 23.5c-1.9-.4-3.8-.6-5.7-.6-4.6 0-8.8 1-12.3 3s-6.3 4.8-8.1 8.3c-1.9 3.6-2.8 7.7-2.8 12.4 0 4.1.9 7.8 2.7 11.1 1.8 3.3 4.3 5.9 7.6 7.7 3.2 1.8 6.9 2.7 11.1 2.7 4.8 0 8.9-1 12.2-2.9l.1-.1v-9.3l-.4.3c-1.5 1.1-3.2 2-4.9 2.6-1.8.6-3.4.9-4.8.9-4 0-7.2-1.2-9.5-3.7s-3.5-5.9-3.5-10.2c0-4.4 1.2-7.9 3.6-10.5 2.4-2.6 5.6-3.9 9.5-3.9 3.3 0 6.6 1.1 9.6 3.3l.4.3v-9.8l-.1-.1c-1.2-.6-2.8-1.1-4.7-1.5M158 23.2c-2.5 0-4.8.8-6.8 2.4-1.7 1.4-2.9 3.4-3.9 5.8h-.1v-7.4h-10.1v43h10.1v-22c0-3.7.8-6.8 2.5-9.1s3.9-3.5 6.5-3.5c.9 0 1.9.2 3 .4 1.1.3 1.9.6 2.4 1l.4.3v-10.2l-.2-.1c-.8-.4-2.1-.6-3.8-.6M185.5 22.9c-7.1 0-12.7 2.1-16.7 6.2s-6 9.8-6 16.9c0 6.7 2 12.1 5.9 16.1 3.9 3.9 9.2 5.9 15.8 5.9 6.9 0 12.4-2.1 16.4-6.3 4-4.2 6-9.8 6-16.7 0-6.8-1.9-12.3-5.7-16.2-3.7-3.9-9-5.9-15.7-5.9m8 33.1c-1.9 2.4-4.8 3.6-8.5 3.6s-6.6-1.2-8.7-3.7c-2.1-2.4-3.1-5.9-3.1-10.3 0-4.6 1.1-8.1 3.1-10.6 2.1-2.5 5-3.7 8.6-3.7 3.6 0 6.4 1.2 8.4 3.6 2 2.4 3.1 5.9 3.1 10.5s-1 8.2-2.9 10.6M229.3 41.7c-3.2-1.3-5.2-2.3-6.1-3.2-.8-.8-1.2-1.9-1.2-3.3 0-1.2.5-2.3 1.6-3.1 1.1-.8 2.5-1.2 4.4-1.2 1.7 0 3.5.3 5.2.8 1.7.5 3.3 1.2 4.5 2.1l.4.3v-9.4l-.2-.1c-1.2-.5-2.7-.9-4.6-1.3-1.9-.3-3.6-.5-5-.5-4.8 0-8.8 1.2-11.9 3.7-3.1 2.4-4.6 5.7-4.6 9.5 0 2 .3 3.8 1 5.3s1.7 2.9 3.1 4c1.4 1.1 3.4 2.3 6.2 3.5 2.3 1 4.1 1.8 5.2 2.4 1.1.6 1.8 1.3 2.3 1.9.4.6.6 1.4.6 2.4 0 2.9-2.2 4.3-6.6 4.3-1.7 0-3.5-.3-5.6-1-2.1-.7-4-1.7-5.7-2.9l-.4-.3v9.9l.2.1c1.5.7 3.3 1.2 5.4 1.7 2.2.4 4.1.7 5.8.7 5.2 0 9.5-1.2 12.5-3.7 3.1-2.5 4.7-5.7 4.7-9.8 0-2.9-.8-5.4-2.5-7.4-1.8-2-4.7-3.8-8.7-5.4M267.6 22.9c-7.1 0-12.7 2.1-16.7 6.2s-6 9.8-6 16.9c0 6.7 2 12.1 5.9 16.1 3.9 3.9 9.2 5.9 15.8 5.9 6.9 0 12.4-2.1 16.4-6.3 4-4.2 6-9.8 6-16.7 0-6.8-1.9-12.3-5.7-16.2-3.8-3.9-9.1-5.9-15.7-5.9m8 33.1c-1.9 2.4-4.8 3.6-8.5 3.6s-6.6-1.2-8.7-3.7c-2.1-2.4-3.1-5.9-3.1-10.3 0-4.6 1.1-8.1 3.1-10.6 2.1-2.5 5-3.7 8.6-3.7 3.5 0 6.4 1.2 8.4 3.6 2 2.4 3.1 5.9 3.1 10.5s-1 8.2-2.9 10.6"/><path d="M342.9 32.2v-8.2h-10.2v-12.9l-.3.1-9.6 2.9-.2.1v9.7h-15.2v-5.4c0-2.5.6-4.4 1.7-5.7 1.1-1.3 2.7-1.9 4.7-1.9 1.4 0 2.9.3 4.5 1l.4.2v-8.7l-.2-.1c-1.4-.5-3.3-.8-5.7-.8-3 0-5.7.7-8.1 1.9-2.4 1.3-4.2 3.1-5.5 5.5-1.3 2.3-2 5-2 8v6h-7.2v8.2h7.1v34.8h10.2v-34.7h15.2v22.1c0 9.1 4.3 13.7 12.8 13.7 1.4 0 2.9-.2 4.3-.5 1.5-.3 2.6-.7 3.2-1l.1-.1v-8.3l-.4.3c-.6.4-1.2.7-2.1.9-.8.2-1.5.3-2 .3-2 0-3.4-.5-4.4-1.6-.9-1.1-1.4-2.9-1.4-5.5v-20.3h10.3z"/></g></svg>
				</a>
			</div>
			<div id="copyright">
				© 2011 - 2018 Microsoft
			</div>
		</div>
	</div><!-- .site-info -->
</footer><!-- .site-footer -->

</div><!-- .site -->

</body>
</html>